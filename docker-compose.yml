version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - config-server
    networks:
      - app-net

  factory-monitoring-service:
    build:
      context: ./factory-monitoring-service
    container_name: factory-monitoring-service
    ports:
      - "8081:8081"
    depends_on:
      - factory_report_db
      - config-server
    networks:
      - app-net

  transport-monitoring-service:
    build:
      context: ./transport-monitoring-service
    container_name: transport-monitoring-service
    ports:
      - "8082:8082"
    depends_on:
      - transport_report_db
      - config-server
    networks:
      - app-net

  auth-server:
    build:
      context: ./auth-server
    container_name: auth-server
    ports:
      - "8083:8083"
    depends_on:
      - user_db
      - config-server
    networks:
      - app-net

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      - consul-server
    networks:
      - app-net

  mail-service:
    build:
      context: ./mail-service
    container_name: mail-service
    ports:
      - "8100:8100"
    depends_on:
      - config-server
    networks:
      - app-net

  user_db:
    image: postgres:17.2-bookworm
    container_name: user_db
    ports:
      - "8903:5432"
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: postgres_admin
      POSTGRES_DB: user
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/etc/postgresql-custom
      - ./postgres-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-init/init.sh:/docker-entrypoint-initdb.d/init.sh
    command: postgres -c config_file=/etc/postgresql-custom/postgresql.conf
    networks:
      - app-net

  factory_report_db:
    image: postgres:17.2-bookworm
    container_name: factory_report_db
    ports:
      - "8901:5432"
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: postgres_admin
      POSTGRES_DB: factory_report
    volumes:
      - factory_report_postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/etc/postgresql-custom
      - ./postgres-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-init/init.sh:/docker-entrypoint-initdb.d/init.sh
    command: postgres -c config_file=/etc/postgresql-custom/postgresql.conf
    networks:
      - app-net

  transport_report_db:
    image: postgres:17.2-bookworm
    container_name: transport_report_db
    ports:
      - "8902:5432"
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: postgres_admin
      POSTGRES_DB: transport_report
    volumes:
      - transport_report_postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/etc/postgresql-custom
      - ./postgres-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-init/init.sh:/docker-entrypoint-initdb.d/init.sh
    command: postgres -c config_file=/etc/postgresql-custom/postgresql.conf
    networks:
      - app-net

  consul-server:
    image: hashicorp/consul:1.20.1
    container_name: consul-server
    ports:
      - "8500:8500"
      - "8600:8600/udp"
      - "8300:8300"
      - "8301:8301"
      - "8301:8301/udp"
      - "8302:8302"
      - "8302:8302/udp"
    command: >
      consul agent -server -bootstrap-expect=1
      -data-dir=/consul/data
      -node=server-1
      -client=0.0.0.0
      -ui
      -config-file=/consul/config/consul_acl.json
    volumes:
      - consul-server-data:/consul/data
      - ./config/config.json:/consul/config/config.json
      - ./config/consul_acl.json:/consul/config/consul_acl.json
    environment:
      CONSUL_BIND_INTERFACE: eth0
    networks:
      - app-net

  consul-agent:
    image: hashicorp/consul:1.20.1
    container_name: consul-agent
    depends_on:
      - consul-server
    command: >
      consul agent -node=agent-1
      -data-dir=/consul/data
      -client=0.0.0.0
      -retry-join=consul-server
      -config-file=/consul/config/consul_acl.json
    volumes:
      - consul-agent-data:/consul/data
      - ./config/consul_acl.json:/consul/config/consul_acl.json
    networks:
      - app-net

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - app-net

  pg-dump-backup:
    build:
      context: pg-dump-backup
    container_name: pg-dump-backup
    environment:
      PGUSER: postgres_admin
      PGPASSWORD: postgres_password
      PGSSLMODE: disable
    volumes:
      - pg_dumps:/backups
    depends_on:
      - user_db
      - factory_report_db
      - transport_report_db
    networks:
      - app-net

volumes:
  factory_report_postgres_data:
  transport_report_postgres_data:
  user_postgres_data:
  consul-server-data:
  consul-agent-data:
  pg_dumps:

networks:
  app-net:
    driver: bridge

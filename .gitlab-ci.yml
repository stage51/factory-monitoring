stages:
  - build
  - sast
  - test
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  CACHE_PATH: ".m2/repository"

cache:
  key: maven-cache
  paths:
    - $CACHE_PATH

.build_template: &build_template
  tags:
    - factory-monitoring-api
  stage: build
  script:
    - chmod +x build.sh
    - ./build.sh

.test_template: &test_template
  tags:
    - factory-monitoring-api
  stage: test
  script:
    - chmod +x test.sh
    - ./test.sh

.sast_template: &sast_template
  tags:
    - factory-monitoring-api
  stage: sast
  artifacts:
    reports:
      sast: reports/sonarqube-report.xml

# ----------------- SAST JOBS -----------------

sast_api_gateway:
  <<: *sast_template
  before_script:
    - cd api-gateway
  script:
    - sonar-scanner -Dsonar.projectKey=api-gateway -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - api-gateway/**/*

sast_auth_server:
  <<: *sast_template
  before_script:
    - cd auth-server
  script:
    - sonar-scanner -Dsonar.projectKey=auth-server -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - auth-server/**/*

sast_config_server:
  <<: *sast_template
  before_script:
    - cd config-server
  script:
    - sonar-scanner -Dsonar.projectKey=config-server -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - config-server/**/*

sast_daily_report:
  <<: *sast_template
  before_script:
    - cd daily-report
  script:
    - sonar-scanner -Dsonar.projectKey=daily-report -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - daily-report/**/*

sast_five_minute_report:
  <<: *sast_template
  before_script:
    - cd five-minute-report
  script:
    - sonar-scanner -Dsonar.projectKey=five-minute-report -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - five-minute-report/**/*

sast_mail_service:
  <<: *sast_template
  before_script:
    - cd mail-service
  script:
    - sonar-scanner -Dsonar.projectKey=mail-server -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - mail-service/**/*

sast_mode_report:
  <<: *sast_template
  before_script:
    - cd mode-report
  script:
    - sonar-scanner -Dsonar.projectKey=mode-report -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true -Dsonar.report.export.path=reports/sonarqube-report.xml
  rules:
    - changes:
        - mode-report/**/*

# ----------------- BUILD JOBS -----------------

build_api_gateway:
  <<: *build_template
  before_script:
    - cd api-gateway
  rules:
    - changes:
        - api-gateway/**/*
  cache:
    - key: cache_api_gateway
      paths:
        - api-gateway/target
  artifacts:
    paths:
      - api-gateway/target/*
    expire_in: 1 day

build_auth_server:
  <<: *build_template
  before_script:
    - cd auth-server
  rules:
    - changes:
        - auth-server/**/*
  cache:
    - key: cache_auth_server
      paths:
        - auth_server/target
  artifacts:
    paths:
      - auth-server/target/*
    expire_in: 1 day

build_config_server:
  <<: *build_template
  before_script:
    - cd config-server
  rules:
    - changes:
        - config-server/**/*
  cache:
    - key: cache_config_server
      paths:
        - config_server/target
  artifacts:
    paths:
      - config-server/target/*
    expire_in: 1 day

build_daily_report:
  <<: *build_template
  before_script:
    - cd daily-report
  rules:
    - changes:
        - daily-report/**/*
  cache:
    - key: cache_daily_report
      paths:
        - daily_report/target
  artifacts:
    paths:
      - daily-report/target/*
    expire_in: 1 day

build_five_minute_report:
  <<: *build_template
  before_script:
    - cd five-minute-report
  rules:
    - changes:
        - five-minute-report/**/*
  cache:
    - key: cache_five_minute_report
      paths:
        - five_minute_report/target
  artifacts:
    paths:
      - five-minute-report/target/*
    expire_in: 1 day

build_mail_service:
  <<: *build_template
  before_script:
    - cd mail-service
  rules:
    - changes:
        - mail-service/**/*
  cache:
    - key: cache_mail_service
      paths:
        - mail_service/target
  artifacts:
    paths:
      - mail-service/target/*
    expire_in: 1 day

build_mode_report:
  <<: *build_template
  before_script:
    - cd mode-report
  rules:
    - changes:
        - mode-report/**/*
  cache:
    - key: cache_mode_report
      paths:
        - mode_report/target
  artifacts:
    paths:
      - mode-report/target/*
    expire_in: 1 day

# ----------------- TEST JOBS -----------------

test_api_gateway:
  <<: *test_template
  before_script:
    - cd api-gateway
  needs:
    - build_api_gateway
  rules:
    - changes:
        - api-gateway/**/*

test_auth_server:
  <<: *test_template
  before_script:
    - cd auth-server
  needs:
    - build_auth_server
  rules:
    - changes:
        - auth-server/**/*

test_config_server:
  <<: *test_template
  before_script:
    - cd config-server
  needs:
    - build_config_server
  rules:
    - changes:
        - config-server/**/*

test_daily_report:
  <<: *test_template
  before_script:
    - cd daily-report
  needs:
    - build_daily_report
  rules:
    - changes:
        - daily-report/**/*

test_five_minute_report:
  <<: *test_template
  before_script:
    - cd five-minute-report
  needs:
    - build_five_minute_report
  rules:
    - changes:
        - five-minute-report/**/*

test_mail_service:
  <<: *test_template
  before_script:
    - cd mail-service
  needs:
    - build_mail_service
  rules:
    - changes:
        - mail-service/**/*

test_mode_report:
  <<: *test_template
  before_script:
    - cd mode-report
  needs:
    - build_mode_report
  rules:
    - changes:
        - mode-report/**/*

# ----------------- DEPLOY JOB -----------------

deploy:
  tags:
    - factory-monitoring-api
  stage: deploy
  script:
    - cp /home/sysadm/factory-monitoring/api-gateway/src/main/resources/application.yml api-gateway/src/main/resources/application.yml
    - cp /home/sysadm/factory-monitoring/certs/keystore.p12 api-gateway/src/main/resources/keystore.p12
    - cp -r /home/sysadm/factory-monitoring/config ./
    - docker-compose build
    - docker-compose up -d
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  needs:
    - job: test_api_gateway
      optional: true
    - job: test_auth_server
      optional: true
    - job: test_config_server
      optional: true
    - job: test_daily_report
      optional: true
    - job: test_five_minute_report
      optional: true
    - job: test_mail_service
      optional: true
    - job: test_mode_report
      optional: true
